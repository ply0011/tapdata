/*
 * Copyright 2017 StreamSets Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Employee.proto

package com.streamsets.pipeline.lib.util;

public final class EmployeeProto {
  private EmployeeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EmployeeOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Employee> {

    // optional .util.Engineer engineer = 1;
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    boolean hasEngineer();
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    com.streamsets.pipeline.lib.util.EngineerProto.Engineer getEngineer();
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder getEngineerOrBuilder();

    // optional .util.Executive exec = 2;
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    boolean hasExec();
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    com.streamsets.pipeline.lib.util.ExecutiveProto.Executive getExec();
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder getExecOrBuilder();
  }
  /**
   * Protobuf type {@code util.Employee}
   */
  public static final class Employee extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Employee> implements EmployeeOrBuilder {
    // Use Employee.newBuilder() to construct.
    private Employee(com.google.protobuf.GeneratedMessage.ExtendableBuilder<com.streamsets.pipeline.lib.util.EmployeeProto.Employee, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Employee(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Employee defaultInstance;
    public static Employee getDefaultInstance() {
      return defaultInstance;
    }

    public Employee getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Employee(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = engineer_.toBuilder();
              }
              engineer_ = input.readMessage(com.streamsets.pipeline.lib.util.EngineerProto.Engineer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(engineer_);
                engineer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = exec_.toBuilder();
              }
              exec_ = input.readMessage(com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exec_);
                exec_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.streamsets.pipeline.lib.util.EmployeeProto.internal_static_util_Employee_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.streamsets.pipeline.lib.util.EmployeeProto.internal_static_util_Employee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.streamsets.pipeline.lib.util.EmployeeProto.Employee.class, com.streamsets.pipeline.lib.util.EmployeeProto.Employee.Builder.class);
    }

    public static com.google.protobuf.Parser<Employee> PARSER =
        new com.google.protobuf.AbstractParser<Employee>() {
      public Employee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Employee(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Employee> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .util.Engineer engineer = 1;
    public static final int ENGINEER_FIELD_NUMBER = 1;
    private com.streamsets.pipeline.lib.util.EngineerProto.Engineer engineer_;
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    public boolean hasEngineer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    public com.streamsets.pipeline.lib.util.EngineerProto.Engineer getEngineer() {
      return engineer_;
    }
    /**
     * <code>optional .util.Engineer engineer = 1;</code>
     */
    public com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder getEngineerOrBuilder() {
      return engineer_;
    }

    // optional .util.Executive exec = 2;
    public static final int EXEC_FIELD_NUMBER = 2;
    private com.streamsets.pipeline.lib.util.ExecutiveProto.Executive exec_;
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    public boolean hasExec() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    public com.streamsets.pipeline.lib.util.ExecutiveProto.Executive getExec() {
      return exec_;
    }
    /**
     * <code>optional .util.Executive exec = 2;</code>
     */
    public com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder getExecOrBuilder() {
      return exec_;
    }

    private void initFields() {
      engineer_ = com.streamsets.pipeline.lib.util.EngineerProto.Engineer.getDefaultInstance();
      exec_ = com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasEngineer()) {
        if (!getEngineer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExec()) {
        if (!getExec().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<com.streamsets.pipeline.lib.util.EmployeeProto.Employee>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, engineer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, exec_);
      }
      extensionWriter.writeUntil(500, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, engineer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, exec_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.streamsets.pipeline.lib.util.EmployeeProto.Employee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.streamsets.pipeline.lib.util.EmployeeProto.Employee prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code util.Employee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          com.streamsets.pipeline.lib.util.EmployeeProto.Employee, Builder> implements com.streamsets.pipeline.lib.util.EmployeeProto.EmployeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.streamsets.pipeline.lib.util.EmployeeProto.internal_static_util_Employee_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.streamsets.pipeline.lib.util.EmployeeProto.internal_static_util_Employee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.streamsets.pipeline.lib.util.EmployeeProto.Employee.class, com.streamsets.pipeline.lib.util.EmployeeProto.Employee.Builder.class);
      }

      // Construct using com.streamsets.pipeline.lib.util.EmployeeProto.Employee.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEngineerFieldBuilder();
          getExecFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (engineerBuilder_ == null) {
          engineer_ = com.streamsets.pipeline.lib.util.EngineerProto.Engineer.getDefaultInstance();
        } else {
          engineerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (execBuilder_ == null) {
          exec_ = com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.getDefaultInstance();
        } else {
          execBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.streamsets.pipeline.lib.util.EmployeeProto.internal_static_util_Employee_descriptor;
      }

      public com.streamsets.pipeline.lib.util.EmployeeProto.Employee getDefaultInstanceForType() {
        return com.streamsets.pipeline.lib.util.EmployeeProto.Employee.getDefaultInstance();
      }

      public com.streamsets.pipeline.lib.util.EmployeeProto.Employee build() {
        com.streamsets.pipeline.lib.util.EmployeeProto.Employee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.streamsets.pipeline.lib.util.EmployeeProto.Employee buildPartial() {
        com.streamsets.pipeline.lib.util.EmployeeProto.Employee result = new com.streamsets.pipeline.lib.util.EmployeeProto.Employee(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (engineerBuilder_ == null) {
          result.engineer_ = engineer_;
        } else {
          result.engineer_ = engineerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (execBuilder_ == null) {
          result.exec_ = exec_;
        } else {
          result.exec_ = execBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.streamsets.pipeline.lib.util.EmployeeProto.Employee) {
          return mergeFrom((com.streamsets.pipeline.lib.util.EmployeeProto.Employee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.streamsets.pipeline.lib.util.EmployeeProto.Employee other) {
        if (other == com.streamsets.pipeline.lib.util.EmployeeProto.Employee.getDefaultInstance()) return this;
        if (other.hasEngineer()) {
          mergeEngineer(other.getEngineer());
        }
        if (other.hasExec()) {
          mergeExec(other.getExec());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasEngineer()) {
          if (!getEngineer().isInitialized()) {

            return false;
          }
        }
        if (hasExec()) {
          if (!getExec().isInitialized()) {

            return false;
          }
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.streamsets.pipeline.lib.util.EmployeeProto.Employee parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.streamsets.pipeline.lib.util.EmployeeProto.Employee) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .util.Engineer engineer = 1;
      private com.streamsets.pipeline.lib.util.EngineerProto.Engineer engineer_ = com.streamsets.pipeline.lib.util.EngineerProto.Engineer.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.streamsets.pipeline.lib.util.EngineerProto.Engineer, com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder, com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder> engineerBuilder_;
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public boolean hasEngineer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public com.streamsets.pipeline.lib.util.EngineerProto.Engineer getEngineer() {
        if (engineerBuilder_ == null) {
          return engineer_;
        } else {
          return engineerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public Builder setEngineer(com.streamsets.pipeline.lib.util.EngineerProto.Engineer value) {
        if (engineerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          engineer_ = value;
          onChanged();
        } else {
          engineerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public Builder setEngineer(
          com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder builderForValue) {
        if (engineerBuilder_ == null) {
          engineer_ = builderForValue.build();
          onChanged();
        } else {
          engineerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public Builder mergeEngineer(com.streamsets.pipeline.lib.util.EngineerProto.Engineer value) {
        if (engineerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              engineer_ != com.streamsets.pipeline.lib.util.EngineerProto.Engineer.getDefaultInstance()) {
            engineer_ =
              com.streamsets.pipeline.lib.util.EngineerProto.Engineer.newBuilder(engineer_).mergeFrom(value).buildPartial();
          } else {
            engineer_ = value;
          }
          onChanged();
        } else {
          engineerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public Builder clearEngineer() {
        if (engineerBuilder_ == null) {
          engineer_ = com.streamsets.pipeline.lib.util.EngineerProto.Engineer.getDefaultInstance();
          onChanged();
        } else {
          engineerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder getEngineerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getEngineerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      public com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder getEngineerOrBuilder() {
        if (engineerBuilder_ != null) {
          return engineerBuilder_.getMessageOrBuilder();
        } else {
          return engineer_;
        }
      }
      /**
       * <code>optional .util.Engineer engineer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.streamsets.pipeline.lib.util.EngineerProto.Engineer, com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder, com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder>
          getEngineerFieldBuilder() {
        if (engineerBuilder_ == null) {
          engineerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.streamsets.pipeline.lib.util.EngineerProto.Engineer, com.streamsets.pipeline.lib.util.EngineerProto.Engineer.Builder, com.streamsets.pipeline.lib.util.EngineerProto.EngineerOrBuilder>(
                  engineer_,
                  getParentForChildren(),
                  isClean());
          engineer_ = null;
        }
        return engineerBuilder_;
      }

      // optional .util.Executive exec = 2;
      private com.streamsets.pipeline.lib.util.ExecutiveProto.Executive exec_ = com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.streamsets.pipeline.lib.util.ExecutiveProto.Executive, com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder, com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder> execBuilder_;
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public boolean hasExec() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public com.streamsets.pipeline.lib.util.ExecutiveProto.Executive getExec() {
        if (execBuilder_ == null) {
          return exec_;
        } else {
          return execBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public Builder setExec(com.streamsets.pipeline.lib.util.ExecutiveProto.Executive value) {
        if (execBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exec_ = value;
          onChanged();
        } else {
          execBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public Builder setExec(
          com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder builderForValue) {
        if (execBuilder_ == null) {
          exec_ = builderForValue.build();
          onChanged();
        } else {
          execBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public Builder mergeExec(com.streamsets.pipeline.lib.util.ExecutiveProto.Executive value) {
        if (execBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              exec_ != com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.getDefaultInstance()) {
            exec_ =
              com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.newBuilder(exec_).mergeFrom(value).buildPartial();
          } else {
            exec_ = value;
          }
          onChanged();
        } else {
          execBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public Builder clearExec() {
        if (execBuilder_ == null) {
          exec_ = com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.getDefaultInstance();
          onChanged();
        } else {
          execBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder getExecBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExecFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      public com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder getExecOrBuilder() {
        if (execBuilder_ != null) {
          return execBuilder_.getMessageOrBuilder();
        } else {
          return exec_;
        }
      }
      /**
       * <code>optional .util.Executive exec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.streamsets.pipeline.lib.util.ExecutiveProto.Executive, com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder, com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder>
          getExecFieldBuilder() {
        if (execBuilder_ == null) {
          execBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.streamsets.pipeline.lib.util.ExecutiveProto.Executive, com.streamsets.pipeline.lib.util.ExecutiveProto.Executive.Builder, com.streamsets.pipeline.lib.util.ExecutiveProto.ExecutiveOrBuilder>(
                  exec_,
                  getParentForChildren(),
                  isClean());
          exec_ = null;
        }
        return execBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:util.Employee)
    }

    static {
      defaultInstance = new Employee(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:util.Employee)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_util_Employee_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_util_Employee_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Employee.proto\022\004util\032\016Engineer.proto\032\017" +
      "Executive.proto\032\014Person.proto\"S\n\010Employe" +
      "e\022 \n\010engineer\030\001 \001(\0132\016.util.Engineer\022\035\n\004e" +
      "xec\030\002 \001(\0132\017.util.Executive*\006\010\220\003\020\364\003B1\n co" +
      "m.streamsets.pipeline.lib.utilB\rEmployee" +
      "Proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_util_Employee_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_util_Employee_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_util_Employee_descriptor,
              new java.lang.String[] { "Engineer", "Exec", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.streamsets.pipeline.lib.util.EngineerProto.getDescriptor(),
          com.streamsets.pipeline.lib.util.ExecutiveProto.getDescriptor(),
          com.streamsets.pipeline.lib.util.PersonProto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
